{"version":3,"file":"persian.min.umd.js","sources":["../persian.js"],"sourcesContent":["﻿/**\r\n * PersianJs v0.4.0\r\n * https://github.com/usablica/persian.js\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2012 usabli.ca and other contributors\r\n */\r\n(function () {\r\n  // Default config/variables\r\n  var VERSION = \"0.4.0\",\r\n    // Check for nodeJS\r\n    hasModule = typeof module !== \"undefined\" && module.exports;\r\n\r\n  // Declare Number Arrays in different locales\r\n  var arabicNumbers = [\"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٨\", \"٩\", \"٠\"],\r\n    persianNumbers = [\"۱\", \"۲\", \"۳\", \"۴\", \"۵\", \"۶\", \"۷\", \"۸\", \"۹\", \"۰\"],\r\n    englishNumbers = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\n  // Declare characters to switch between\r\n  var persianChar = [\r\n      \"ض\",\r\n      \"ص\",\r\n      \"ث\",\r\n      \"ق\",\r\n      \"ف\",\r\n      \"غ\",\r\n      \"ع\",\r\n      \"ه\",\r\n      \"خ\",\r\n      \"ح\",\r\n      \"ج\",\r\n      \"چ\",\r\n      \"ش\",\r\n      \"س\",\r\n      \"ی\",\r\n      \"ب\",\r\n      \"ل\",\r\n      \"ا\",\r\n      \"ت\",\r\n      \"ن\",\r\n      \"م\",\r\n      \"ک\",\r\n      \"گ\",\r\n      \"ظ\",\r\n      \"ط\",\r\n      \"ز\",\r\n      \"ر\",\r\n      \"ذ\",\r\n      \"د\",\r\n      \"پ\",\r\n      \"و\",\r\n      \"؟\",\r\n      \"ئ\",\r\n    ],\r\n    englishChar = [\r\n      \"q\",\r\n      \"w\",\r\n      \"e\",\r\n      \"r\",\r\n      \"t\",\r\n      \"y\",\r\n      \"u\",\r\n      \"i\",\r\n      \"o\",\r\n      \"p\",\r\n      \"[\",\r\n      \"]\",\r\n      \"a\",\r\n      \"s\",\r\n      \"d\",\r\n      \"f\",\r\n      \"g\",\r\n      \"h\",\r\n      \"j\",\r\n      \"k\",\r\n      \"l\",\r\n      \";\",\r\n      \"'\",\r\n      \"z\",\r\n      \"x\",\r\n      \"c\",\r\n      \"v\",\r\n      \"b\",\r\n      \"n\",\r\n      \"m\",\r\n      \",\",\r\n      \"?\",\r\n      \"m\",\r\n    ];\r\n\r\n  /**\r\n   * PersianJs main class\r\n   *\r\n   * @class PersianJs\r\n   */\r\n  function PersianJs(str) {\r\n    this._str = str;\r\n  }\r\n\r\n  /**\r\n   * Used for convert Arabic characters to Persian\r\n   *\r\n   * @api private\r\n   * @method _arabicChar\r\n   * @param {String} value\r\n   * @return {Object} PersianJs Object\r\n   */\r\n  function _arabicChar(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    var arabicChars = [\r\n        \"ي\",\r\n        \"ك\",\r\n        \"‍\",\r\n        \"دِ\",\r\n        \"بِ\",\r\n        \"زِ\",\r\n        \"ذِ\",\r\n        \"ِشِ\",\r\n        \"ِسِ\",\r\n        \"ى\",\r\n        \"ة\",\r\n      ],\r\n      persianChars = [\"ی\", \"ک\", \"\", \"د\", \"ب\", \"ز\", \"ذ\", \"ش\", \"س\", \"ی\", \"ه\"];\r\n\r\n    for (var i = 0, charsLen = arabicChars.length; i < charsLen; i++) {\r\n      value = value.replace(new RegExp(arabicChars[i], \"g\"), persianChars[i]);\r\n    }\r\n    this._str = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Used for convert Persian numbers to English\r\n   *\r\n   * @api private\r\n   * @method _persianNumber\r\n   * @param {String} value\r\n   * @return {Object} PersianJs Object\r\n   */\r\n  function _persianNumber(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0, numbersLen = englishNumbers.length; i < numbersLen; i++) {\r\n      value = value.replace(\r\n        new RegExp(persianNumbers[i], \"g\"),\r\n        englishNumbers[i]\r\n      );\r\n    }\r\n\r\n    this._str = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Used for convert Arabic numbers to Persian\r\n   *\r\n   * @api private\r\n   * @method _arabicNumber\r\n   * @param {String} value\r\n   * @return {Object} PersianJs Object\r\n   */\r\n  function _arabicNumber(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    value = value.toString();\r\n\r\n    for (var i = 0, numbersLen = arabicNumbers.length; i < numbersLen; i++) {\r\n      value = value.replace(\r\n        new RegExp(arabicNumbers[i], \"g\"),\r\n        persianNumbers[i]\r\n      );\r\n    }\r\n    this._str = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Used for convert English numbers to Persian\r\n   *\r\n   * @api private\r\n   * @method _englishNumber\r\n   * @param {String} value\r\n   * @return {Object} PersianJs Object\r\n   */\r\n  function _englishNumber(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    value = value.toString();\r\n    var englishNumbers = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\r\n      persianNumbers = [\"۱\", \"۲\", \"۳\", \"۴\", \"۵\", \"۶\", \"۷\", \"۸\", \"۹\", \"۰\"];\r\n\r\n    for (var i = 0, numbersLen = englishNumbers.length; i < numbersLen; i++) {\r\n      value = value.replace(\r\n        new RegExp(englishNumbers[i], \"g\"),\r\n        persianNumbers[i]\r\n      );\r\n    }\r\n    this._str = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Used for convert Persian and Arabic numbers to English string\r\n   *\r\n   * @api private\r\n   * @method _toEnglishNumber\r\n   * @param {String} value\r\n   * @return {Object} PersianJs Object\r\n   */\r\n  function _toEnglishNumber(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    for (var i = 0, numbersLen = englishNumbers.length; i < numbersLen; i++) {\r\n      value = value\r\n        .replace(new RegExp(persianNumbers[i], \"g\"), englishNumbers[i])\r\n        .replace(new RegExp(arabicNumbers[i], \"g\"), englishNumbers[i]);\r\n    }\r\n    this._str = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Used for decode Persian Charachters in URL\r\n   * https://fa.wikipedia.org/wiki/مدیاویکی:Gadget-Extra-Editbuttons-Functions.js\r\n   *\r\n   * @api private\r\n   * @method _decodeURL\r\n   * @param {String} value\r\n   * @return {Object} PersianJs Object\r\n   */\r\n  function _decodeURL(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    // Replace every %20 with _ to protect them from decodeURI\r\n    var old = \"\";\r\n    while (old != value) {\r\n      old = value;\r\n      value = value.replace(\r\n        /(http\\S+?)\\%20/g,\r\n        \"$1\\u200c\\u200c\\u200c_\\u200c\\u200c\\u200c\"\r\n      );\r\n    }\r\n    // Decode URIs\r\n    // NOTE: This would convert all %20's to _'s which could break some links\r\n    // but we will undo that later on\r\n    value = value.replace(/(http\\S+)/g, function (s, p) {\r\n      return decodeURI(p);\r\n    });\r\n    // Revive all instances of %20 to make sure no links is broken\r\n    value = value.replace(/\\u200c\\u200c\\u200c_\\u200c\\u200c\\u200c/g, \"%20\");\r\n    this._str = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Used for Change keyboard layout\r\n   *\r\n   * @api private\r\n   * @method _switchKey\r\n   * @param {String} value\r\n   * @return {Object} PersianJs Object\r\n   */\r\n  function _switchKey(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0, charsLen = persianChar.length; i < charsLen; i++) {\r\n      value = value.replace(new RegExp(persianChar[i], \"g\"), englishChar[i]);\r\n    }\r\n    this._str = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Used for Change keyboard layout back to persian\r\n   *\r\n   * @api private\r\n   * @method _switchKeyBackToPersian\r\n   * @param {String} value\r\n   * @return {Object} PersianJs Object\r\n   */\r\n  function _switchKeyBackToPersian(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0, charsLen = englishChar.length; i < charsLen; i++) {\r\n      value = value.replace(englishChar[i], persianChar[i]);\r\n    }\r\n    this._str = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Used for get persian words representation of a number\r\n   *\r\n   * @api private\r\n   * @method _digitsToWords\r\n   * @param {String} value\r\n   * @return {Object} PersianJs Object\r\n   */\r\n  function _digitsToWords(value) {\r\n    var delimiter, digit, i, iThree, numbers, parts, result, resultThree, three;\r\n\r\n    if (!isFinite(value)) {\r\n      return \"\";\r\n    }\r\n\r\n    if (typeof value !== \"string\") {\r\n      value = value.toString();\r\n    }\r\n\r\n    parts = [\r\n      \"\",\r\n      \"هزار\",\r\n      \"میلیون\",\r\n      \"میلیارد\",\r\n      \"تریلیون\",\r\n      \"کوادریلیون\",\r\n      \"کویینتیلیون\",\r\n      \"سکستیلیون\",\r\n    ];\r\n    numbers = {\r\n      0: [\r\n        \"\",\r\n        \"صد\",\r\n        \"دویست\",\r\n        \"سیصد\",\r\n        \"چهارصد\",\r\n        \"پانصد\",\r\n        \"ششصد\",\r\n        \"هفتصد\",\r\n        \"هشتصد\",\r\n        \"نهصد\",\r\n      ],\r\n      1: [\r\n        \"\",\r\n        \"ده\",\r\n        \"بیست\",\r\n        \"سی\",\r\n        \"چهل\",\r\n        \"پنجاه\",\r\n        \"شصت\",\r\n        \"هفتاد\",\r\n        \"هشتاد\",\r\n        \"نود\",\r\n      ],\r\n      2: [\"\", \"یک\", \"دو\", \"سه\", \"چهار\", \"پنج\", \"شش\", \"هفت\", \"هشت\", \"نه\"],\r\n      two: [\r\n        \"ده\",\r\n        \"یازده\",\r\n        \"دوازده\",\r\n        \"سیزده\",\r\n        \"چهارده\",\r\n        \"پانزده\",\r\n        \"شانزده\",\r\n        \"هفده\",\r\n        \"هجده\",\r\n        \"نوزده\",\r\n      ],\r\n      zero: \"صفر\",\r\n    };\r\n    delimiter = \" و \";\r\n\r\n    valueParts = value\r\n      .split(\"\")\r\n      .reverse()\r\n      .join(\"\")\r\n      .replace(/\\d{3}(?=\\d)/g, \"$&,\")\r\n      .split(\"\")\r\n      .reverse()\r\n      .join(\"\")\r\n      .split(\",\")\r\n      .map(function (str) {\r\n        return Array(4 - str.length).join(\"0\") + str;\r\n      });\r\n\r\n    result = (function () {\r\n      var _results;\r\n      _results = [];\r\n      for (iThree in valueParts) {\r\n        three = valueParts[iThree];\r\n\r\n        resultThree = (function () {\r\n          var _i, _len, _results1;\r\n          _results1 = [];\r\n\r\n          for (i = _i = 0, _len = three.length; _i < _len; i = ++_i) {\r\n            digit = three[i];\r\n            if (i === 1 && digit === \"1\") {\r\n              _results1.push(numbers.two[three[2]]);\r\n            } else if (\r\n              (i !== 2 || three[1] !== \"1\") &&\r\n              numbers[i][digit] !== \"\"\r\n            ) {\r\n              _results1.push(numbers[i][digit]);\r\n            } else {\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return _results1;\r\n        })();\r\n\r\n        resultThree = resultThree.join(delimiter);\r\n        var _result = resultThree\r\n          ? resultThree + \" \" + parts[valueParts.length - parseInt(iThree) - 1]\r\n          : resultThree;\r\n        _results.push(_result);\r\n      }\r\n      return _results;\r\n    })();\r\n\r\n    result = result.filter(function (x) {\r\n      return x.trim() !== \"\";\r\n    });\r\n\r\n    result = result.join(delimiter).trim();\r\n    if (result === \"\") {\r\n      result = numbers.zero;\r\n    }\r\n\r\n    this._str = result;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Used for Zero-width non-joiner correction\r\n   *\r\n   * @api private\r\n   * @method _halfSpace\r\n   * @param {string} value\r\n   * @return {object} PersianJs object\r\n   */\r\n  function _halfSpace(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    var pattern;\r\n\r\n    // Replace Zero-width non-joiner between persian MI.\r\n    pattern = /((\\s\\u0645\\u06CC)+( )+([\\u0600-\\u06EF]{1,}){1,})/g;\r\n    value = value.replace(new RegExp(pattern), \"$2\\u200C$4\");\r\n\r\n    // Replace Zero-width non-joiner between perisan De-Yii.\r\n    pattern = /(([\\u0600-\\u06EF]{1,})+( )+(ای|ایی|اند|ایم|اید|ام){1})/g;\r\n    value = value.replace(new RegExp(pattern), \"$2\\u200C$4\");\r\n\r\n    this._str = value;\r\n    return this;\r\n  }\r\n\r\n  var persianJs = function (inputStr) {\r\n    if (!inputStr || inputStr === \"\") {\r\n      throw new Error(\"Input is null or empty.\");\r\n    }\r\n    return new PersianJs(inputStr);\r\n  };\r\n\r\n  /**\r\n   * Current PersianJs version\r\n   *\r\n   * @property version\r\n   * @type String\r\n   */\r\n  persianJs.version = VERSION;\r\n\r\n  //Prototype\r\n  persianJs.fn = PersianJs.prototype = {\r\n    clone: function () {\r\n      return persianJs(this);\r\n    },\r\n    value: function () {\r\n      return this._str;\r\n    },\r\n    toString: function () {\r\n      return this._str.toString();\r\n    },\r\n    set: function (value) {\r\n      this._str = String(value);\r\n      return this;\r\n    },\r\n    arabicChar: function () {\r\n      return _arabicChar.call(this, this._str);\r\n    },\r\n    persianNumber: function () {\r\n      return _persianNumber.call(this, this._str);\r\n    },\r\n    arabicNumber: function () {\r\n      return _arabicNumber.call(this, this._str);\r\n    },\r\n    englishNumber: function () {\r\n      return _englishNumber.call(this, this._str);\r\n    },\r\n    toEnglishNumber: function () {\r\n      return _toEnglishNumber.call(this, this._str);\r\n    },\r\n    fixURL: function () {\r\n      return _decodeURL.call(this, this._str);\r\n    },\r\n    decodeURL: function () {\r\n      return _decodeURL.call(this, this._str);\r\n    },\r\n    switchKey: function () {\r\n      return _switchKey.call(this, this._str);\r\n    },\r\n    digitsToWords: function () {\r\n      return _digitsToWords.call(this, this._str);\r\n    },\r\n    halfSpace: function () {\r\n      return _halfSpace.call(this, this._str);\r\n    },\r\n    switchKeyBackToPersian: function () {\r\n      return _switchKeyBackToPersian.call(this, this._str);\r\n    },\r\n  };\r\n\r\n  //Expose PersianJs\r\n  //CommonJS module is defined\r\n  if (hasModule) {\r\n    module.exports = persianJs;\r\n  }\r\n  //global ender:false\r\n  if (typeof ender === \"undefined\") {\r\n    // here, `this` means `window` in the browser, or `global` on the server\r\n    // add `persianJs` as a global object via a string identifier,\r\n    // for Closure Compiler \"advanced\" mode\r\n    this[\"persianJs\"] = persianJs;\r\n  }\r\n  //global define:false\r\n  if (typeof define === \"function\" && define.amd) {\r\n    define(\"persianJs\", [], function () {\r\n      return persianJs;\r\n    });\r\n  }\r\n})();\r\n"],"names":["hasModule","module","exports","arabicNumbers","persianNumbers","englishNumbers","persianChar","englishChar","PersianJs","str","this","_str","_arabicChar","value","arabicChars","persianChars","i","charsLen","length","replace","RegExp","_persianNumber","numbersLen","_arabicNumber","toString","_englishNumber","_toEnglishNumber","_decodeURL","old","s","p","decodeURI","_switchKey","_switchKeyBackToPersian","_digitsToWords","digit","iThree","numbers","parts","result","resultThree","three","isFinite","0","1","2","two","zero","valueParts","split","reverse","join","map","Array","_results","_result","_i","_len","_results1","push","parseInt","filter","x","trim","_halfSpace","pattern","persianJs","inputStr","Error","version","fn","prototype","clone","set","String","arabicChar","call","persianNumber","arabicNumber","englishNumber","toEnglishNumber","fixURL","decodeURL","switchKey","digitsToWords","halfSpace","switchKeyBackToPersian","ender","define","amd"],"mappings":"8EAOA,WAEE,IAEEA,EAA8B,oBAAXC,QAA0BA,OAAOC,QAGlDC,EAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChEC,EAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/DC,EAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG7DC,EAAc,CACd,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,EAAc,CACZ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAQJ,SAASC,EAAUC,GACjBC,KAAKC,KAAOF,EAWd,SAASG,EAAYC,GACnB,GAAKA,EAAL,CAkBA,IAfA,IAAIC,EAAc,CACd,IACA,IACA,IACA,KACA,KACA,KACA,KACA,MACA,MACA,IACA,KAEFC,EAAe,CAAC,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE1DC,EAAI,EAAGC,EAAWH,EAAYI,OAAQF,EAAIC,EAAUD,IAC3DH,EAAQA,EAAMM,QAAQ,IAAIC,OAAON,EAAYE,GAAI,KAAMD,EAAaC,IAGtE,OADAN,KAAKC,KAAOE,QAYd,SAASQ,EAAeR,GACtB,GAAKA,EAAL,CAIA,IAAK,IAAIG,EAAI,EAAGM,EAAajB,EAAea,OAAQF,EAAIM,EAAYN,IAClEH,EAAQA,EAAMM,QACZ,IAAIC,OAAOhB,EAAeY,GAAI,KAC9BX,EAAeW,IAKnB,OADAN,KAAKC,KAAOE,QAYd,SAASU,EAAcV,GACrB,GAAKA,EAAL,CAGAA,EAAQA,EAAMW,WAEd,IAAK,IAAIR,EAAI,EAAGM,EAAanB,EAAce,OAAQF,EAAIM,EAAYN,IACjEH,EAAQA,EAAMM,QACZ,IAAIC,OAAOjB,EAAca,GAAI,KAC7BZ,EAAeY,IAInB,OADAN,KAAKC,KAAOE,QAYd,SAASY,EAAeZ,GACtB,GAAKA,EAAL,CAGAA,EAAQA,EAAMW,WAId,IAHA,IAAInB,EAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjED,EAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAExDY,EAAI,EAAGM,EAAajB,EAAea,OAAQF,EAAIM,EAAYN,IAClEH,EAAQA,EAAMM,QACZ,IAAIC,OAAOf,EAAeW,GAAI,KAC9BZ,EAAeY,IAInB,OADAN,KAAKC,KAAOE,QAYd,SAASa,EAAiBb,GACxB,GAAKA,EAAL,CAGA,IAAK,IAAIG,EAAI,EAAGM,EAAajB,EAAea,OAAQF,EAAIM,EAAYN,IAClEH,EAAQA,EACLM,QAAQ,IAAIC,OAAOhB,EAAeY,GAAI,KAAMX,EAAeW,IAC3DG,QAAQ,IAAIC,OAAOjB,EAAca,GAAI,KAAMX,EAAeW,IAG/D,OADAN,KAAKC,KAAOE,QAad,SAASc,EAAWd,GAClB,GAAKA,EAAL,CAKA,IADA,IAAIe,EAAM,GACHA,GAAOf,GACZe,EAAMf,EACNA,EAAQA,EAAMM,QACZ,kBACA,aAYJ,OAFAN,GAJAA,EAAQA,EAAMM,QAAQ,aAAc,SAAUU,EAAGC,GAC/C,OAAOC,UAAUD,MAGLX,QAAQ,yCAA0C,OAChET,KAAKC,KAAOE,QAYd,SAASmB,EAAWnB,GAClB,GAAKA,EAAL,CAIA,IAAK,IAAIG,EAAI,EAAGC,EAAWX,EAAYY,OAAQF,EAAIC,EAAUD,IAC3DH,EAAQA,EAAMM,QAAQ,IAAIC,OAAOd,EAAYU,GAAI,KAAMT,EAAYS,IAGrE,OADAN,KAAKC,KAAOE,QAYd,SAASoB,EAAwBpB,GAC/B,GAAKA,EAAL,CAIA,IAAK,IAAIG,EAAI,EAAGC,EAAWV,EAAYW,OAAQF,EAAIC,EAAUD,IAC3DH,EAAQA,EAAMM,QAAQZ,EAAYS,GAAIV,EAAYU,IAGpD,OADAN,KAAKC,KAAOE,QAYd,SAASqB,EAAerB,GACtB,IAAesB,EAAOnB,EAAGoB,EAAQC,EAASC,EAAOC,EAAQC,EAAaC,EAEtE,OAAKC,SAAS7B,IAIO,iBAAVA,IACTA,EAAQA,EAAMW,YAGhBc,EAAQ,CACN,GACA,OACA,SACA,UACA,UACA,aACA,cACA,aAEFD,EAAU,CACRM,EAAG,CACD,GACA,KACA,QACA,OACA,SACA,QACA,OACA,QACA,QACA,QAEFC,EAAG,CACD,GACA,KACA,OACA,KACA,MACA,QACA,MACA,QACA,QACA,OAEFC,EAAG,CAAC,GAAI,KAAM,KAAM,KAAM,OAAQ,MAAO,KAAM,MAAO,MAAO,MAC7DC,IAAK,CACH,KACA,QACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,SAEFC,KAAM,OAIRC,WAAanC,EACVoC,MAAM,IACNC,UACAC,KAAK,IACLhC,QAAQ,eAAgB,OACxB8B,MAAM,IACNC,UACAC,KAAK,IACLF,MAAM,KACNG,IAAI,SAAU3C,GACb,OAAO4C,MAAM,EAAI5C,EAAIS,QAAQiC,KAAK,KAAO1C,IA4C9B,MADf8B,GAJAA,GApCAA,EAAU,WACR,IAAIe,EAEJ,IAAKlB,KADLkB,EAAW,GACIN,WAAY,CACzBP,EAAQO,WAAWZ,GAwBnB,IAAImB,GADJf,GArBAA,EAAe,WACb,IAAIgB,EAAIC,EAAMC,EAGd,IAFAA,EAAY,GAEP1C,EAAIwC,EAAK,EAAGC,EAAOhB,EAAMvB,OAAQsC,EAAKC,EAAMzC,IAAMwC,EAErD,GADArB,EAAQM,EAAMzB,GACJ,IAANA,GAAqB,MAAVmB,EACbuB,EAAUC,KAAKtB,EAAQS,IAAIL,EAAM,aAE1B,IAANzB,GAAwB,MAAbyB,EAAM,IACI,KAAtBJ,EAAQrB,GAAGmB,GAIX,SAFAuB,EAAUC,KAAKtB,EAAQrB,GAAGmB,IAM9B,OAAOuB,EAlBM,IAqBWP,KA1ClB,QA4CJX,EAAc,IAAMF,EAAMU,WAAW9B,OAAS0C,SAASxB,GAAU,GACjEI,EACJc,EAASK,KAAKJ,GAEhB,OAAOD,EAjCC,IAoCMO,OAAO,SAAUC,GAC/B,MAAoB,KAAbA,EAAEC,UAGKZ,KAvDJ,OAuDoBY,UAE9BxB,EAASF,EAAQU,MAGnBrC,KAAKC,KAAO4B,QArHH,GAiIX,SAASyB,EAAWnD,GAKlB,IAAIoD,EAJJ,GAAKpD,EAeL,OARAoD,EAAU,oDACVpD,EAAQA,EAAMM,QAAQ,IAAIC,OAAO6C,GAAU,SAG3CA,EAAU,0DACVpD,EAAQA,EAAMM,QAAQ,IAAIC,OAAO6C,GAAU,SAE3CvD,KAAKC,KAAOE,OAId,IAAIqD,EAAY,SAAUC,GACxB,IAAKA,GAAyB,KAAbA,EACf,UAAUC,MAAM,2BAElB,WAAW5D,EAAU2D,IASvBD,EAAUG,QAldI,QAqddH,EAAUI,GAAK9D,EAAU+D,UAAY,CACnCC,MAAO,WACL,OAAON,EAAUxD,OAEnBG,MAAO,WACL,YAAYF,MAEda,SAAU,WACR,YAAYb,KAAKa,YAEnBiD,IAAK,SAAU5D,GAEb,OADAH,KAAKC,KAAO+D,OAAO7D,SAGrB8D,WAAY,WACV,OAAO/D,EAAYgE,KAAKlE,KAAMA,KAAKC,OAErCkE,cAAe,WACb,OAAOxD,EAAeuD,KAAKlE,KAAMA,KAAKC,OAExCmE,aAAc,WACZ,OAAOvD,EAAcqD,KAAKlE,KAAMA,KAAKC,OAEvCoE,cAAe,WACb,OAAOtD,EAAemD,KAAKlE,KAAMA,KAAKC,OAExCqE,gBAAiB,WACf,OAAOtD,EAAiBkD,KAAKlE,KAAMA,KAAKC,OAE1CsE,OAAQ,WACN,OAAOtD,EAAWiD,KAAKlE,KAAMA,KAAKC,OAEpCuE,UAAW,WACT,OAAOvD,EAAWiD,KAAKlE,KAAMA,KAAKC,OAEpCwE,UAAW,WACT,OAAOnD,EAAW4C,KAAKlE,KAAMA,KAAKC,OAEpCyE,cAAe,WACb,OAAOlD,EAAe0C,KAAKlE,KAAMA,KAAKC,OAExC0E,UAAW,WACT,OAAOrB,EAAWY,KAAKlE,KAAMA,KAAKC,OAEpC2E,uBAAwB,WACtB,OAAOrD,EAAwB2C,KAAKlE,KAAMA,KAAKC,QAM/CX,IACFC,OAAOC,QAAUgE,GAGE,oBAAVqB,QAIT7E,KAAA,UAAoBwD,GAGA,mBAAXsB,QAAyBA,OAAOC,KACzCD,OAAO,YAAa,GAAI,WACtB,OAAOtB,IAvhBb"}